#!/bin/bash

err() {
	echo "$@" >&2
}

usage() {
	err "usage: $(basename $0) repo tag"
	err "Build the docker image contained in repo with the given tag. The tag must be a"
	err "full Docker name/tag. The tag portion is checked out from the repo to be built."
	err "If the tag portion is omitted then master is built and the resulting image is"
	err "tagged as latest."
	exit 1
}

die() {
	err "$@"
	exit 1
}

checkout() {
	if [[ -e "${dest}/.git" ]]; then
		# repo exists, update it
		cd "$dest"
		git stash
		git fetch origin
		git fetch --tags
		git checkout "$branch"
		git submodule update --init --recursive
		cd - > /dev/null
	elif [[ -n $repo ]]; then
		# repo is missing, clone it
		mkdir -p $(dirname "$dest")
		git clone "$repo" "$dest"
		cd "$dest"
		git fetch --tags
		git checkout "$branch"
		git submodule update --init --recursive
		cd - > /dev/null
	else
		die "destination is not a git repo"
	fi
}

[[ -z $1 ]] && usage
[[ -z $2 ]] && usage
[[ -n $3 ]] && usage

if [[ -d "$1" ]]; then
	dest=$1
	repo=
else
	dest=$(echo "$1" | sed -e 's/.*\///g' -e 's/\.git$//')
	repo=$1
fi

name=$(echo "$2" | sed 's/:.*//')
branch=$(echo "$2" | sed 's/.*://')
tag=$branch

if [[ -z $branch || "$name" == "$branch" ]]; then
	branch=master
	tag=latest
fi

[[ -z "$name" ]] && die "image name missing from tag"

checkout
docker build --rm -t "$name:$tag" "$dest"
