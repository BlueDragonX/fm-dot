#!/bin/bash
usage() {
	echo "usage: $(basename "$0") ACCOUNT ROLE [NAME]" >&2
	echo "Assume a role on the given account. Optionaly provide a role session name. The" >&2
	echo "output should be sourced by the shell for use by the aws CLI tools." >&2
	exit 1
}

account=$1; shift
role=$1; shift
name=$1; shift

test -z $account && usage
test -z $role && usage
test -z $name && name=CLI

now=$(date "+%s")
arn="arn:aws:iam::$account:role/$role"

if [ -z $AWS_SESSION_EXPIRATION ] || [ $now -gt $AWS_SESSION_EXPIRATION ] || [ "$name" != "$AWS_SESSION_NAME" ]; then
	echo "Creating session ${name}..." >&2
	unset AWS_ACCESS_KEY_ID
	unset AWS_SECRET_ACCESS_KEY
	unset AWS_SESSION_TOKEN
	unset AWS_SESSION_EXPIRATION
	unset AWS_SESSION_NAME
	unset AWS_SECURITY_TOKEN

	username=$(aws iam get-user | jq -r .User.Arn | sed 's|.*/||')
	test $? -ne 0 && exit $?

	mfajson=$(aws iam list-mfa-devices --user-name rgb@zenreach.com)
	test $? -ne 0 && exit $?

	mfa=$(echo "$mfajson" | jq -e -r .MFADevices[0].SerialNumber)
	if [ $? -eq 0 ]; then
		read -r -p "MFA Token: " token
		opts="--serial-number $mfa --token-code $token"
	fi
	rolejson=$(aws sts assume-role --role-arn "$arn" --role-session-name "$name" $opts)
	test $? -ne 0 && exit $?

	AWS_ACCESS_KEY_ID=$(echo "$rolejson" | jq -r '.Credentials.AccessKeyId')
	AWS_SECRET_ACCESS_KEY=$(echo "$rolejson" | jq -r '.Credentials.SecretAccessKey')
	AWS_SESSION_TOKEN=$(echo "$rolejson" | jq -r '.Credentials.SessionToken')
	AWS_SESSION_EXPIRATION=$(date --date="$(echo "$rolejson" | jq -r '.Credentials.Expiration')" "+%s")
	AWS_SESSION_NAME="$name"
	echo "Generated temporary access key ${AWS_ACCESS_KEY_ID}." >&2
	cat <<EOF
export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"
export AWS_SESSION_TOKEN="$AWS_SESSION_TOKEN"
export AWS_SESSION_EXPIRATION="$AWS_SESSION_EXPIRATION"
export AWS_SESSION_NAME="$AWS_SESSION_NAME"
export AWS_SECURITY_TOKEN="$AWS_SESSION_TOKEN"
EOF
else
	echo "Session $AWS_SESSION_NAME active with access key ${AWS_ACCESS_KEY_ID}." >&2
fi
